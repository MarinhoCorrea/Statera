{
  "openapi": "3.0.3",
  "info": {
    "title": "Statera API",
    "description": "Documentação da API do projeto Statera - Sistema de Adoção de Animais",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Servidor local para a utilização da API (Porta padrão 5000)"
    }
  ],
  "tags": [
    {
      "name": "Autenticação",
      "description": "Rotas para login e obtenção do token JWT."
    },
    {
      "name": "Tutores",
      "description": "Rotas de cadastro e gestão de dados do tutor/usuário."
    },
    {
      "name": "Animais",
      "description": "Rotas públicas para listagem e cadastro de animais."
    },
    {
      "name": "Questionário",
      "description": "Rotas para o questionário obrigatório de adoção."
    },
    {
      "name": "Adoção",
      "description": "Rotas de pedidos de adoção."
    },
    {
      "name": "Doações",
      "description": "Rotas de doações via Pix."
    },
    {
      "name": "Administrador",
      "description": "Rotas de uso exclusivo para administradores do sistema."
    }
  ],
  "paths": {
    "/autenticacao": {
      "post": {
        "tags": [
          "Autenticação"
        ],
        "summary": "Realiza o login de Tutor/Administrador",
        "description": "Autentica o usuário (Tutor ou Administrador) e retorna um token JWT para acesso às rotas protegidas.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login bem-sucedido. Retorna o token de acesso e os dados do tutor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Email ou senha não fornecidos.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Email e senha são obrigatórios."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Credenciais inválidas.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Email ou senha inválidos."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      }
    },
    "/tutores": {
      "post": {
        "tags": [
          "Tutores"
        ],
        "summary": "Cadastra um novo Tutor",
        "description": "Cria uma nova conta de usuário/tutor no sistema. Campos obrigatórios: nome_completo, email, senha, cidade, estado, idade, telefone.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TutorCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tutor criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TutorResponseData"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Dados incompletos ou email já cadastrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "DadosIncompletos": {
                    "value": {
                      "erro": "Todos os campos obrigatórios devem ser preenchidos corretamente."
                    }
                  },
                  "EmailDuplicado": {
                    "value": {
                      "erro": "Email preenchido já está sendo utilizado."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      }
    },
    "/tutores/{id}": {
      "get": {
        "tags": [
          "Tutores"
        ],
        "summary": "Busca dados de um Tutor",
        "description": "Busca os dados de um tutor pelo ID, incluindo o questionário se existir. **Requer autenticação.**",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID do Tutor"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna os dados do Tutor e seu questionário.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TutorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Token ausente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token ausente."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Token inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token inválido"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: Tutor não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Tutor não encontrado."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tutores"
        ],
        "summary": "Atualiza dados do Tutor e/ou Questionário",
        "description": "Permite atualizar dados do tutor e/ou preencher/atualizar o questionário de adoção simultaneamente. **Requer autenticação.**",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID do Tutor"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TutorPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tutor e/ou Questionário atualizados com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TutorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: <br>1. Dados ausentes para a requisição. <br>2. Campos do Questionário inválidos/obrigatórios faltando. <br>3. Tentativa de atualizar um Questionário que não foi preenchido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Tentativa de atualizar questionário sem possuir um questionário."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Token ausente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token ausente."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Token inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token inválido"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: Tutor não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Tutor não encontrado."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      }
    },
    "/animais": {
      "get": {
        "tags": [
          "Animais"
        ],
        "summary": "Lista animais disponíveis para adoção",
        "description": "Retorna uma lista de animais com o status `adotado: false`. <br>Permite filtros por `especie`, `porte`, `castrado` e `vacinado` (query params).",
        "parameters": [
          {
            "name": "especie",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtrar por espécie do animal (ex: 'cachorro', 'gato')"
          },
          {
            "name": "porte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtrar por porte (ex: 'pequeno', 'medio', 'grande')"
          },
          {
            "name": "castrado",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filtrar por castrado (`true` ou `false`)"
          },
          {
            "name": "vacinado",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filtrar por vacinado (`true` ou `false`)"
          }
        ],
        "responses": {
          "201": {
            "description": "Lista de animais disponíveis.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnimalListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Animais"
        ],
        "summary": "Cadastra um novo animal",
        "description": "Cadastra um novo animal no sistema. <br>Requer campos obrigatórios: nome, especie, porte, descricao.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnimalPost"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Animal cadastrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnimalRes"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Dados incompletos.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Todos os campos obrigatórios devem ser preenchidos corretamente."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      }
    },
    "/questionario": {
      "post": {
        "tags": [
          "Questionário"
        ],
        "summary": "Preenche o questionário de adoção",
        "description": "Envia o questionário de adoção, que é pré-requisito para fazer um pedido. **Requer autenticação.**",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Questionario"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Questionário enviado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Questionario"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Dados incompletos ou questionário já existe para este tutor.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "DadosIncompletos": {
                    "value": {
                      "erro": "Todos os campos obrigatórios devem ser preenchidos corretamente."
                    }
                  },
                  "QuestionarioExistente": {
                    "value": {
                      "erro": "O Questionário já existe para este tutor. Para atualizar, utilize a rota PATCH /tutores/{id}."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Token ausente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token ausente."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Token inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token inválido"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      }
    },
    "/adocao": {
      "post": {
        "tags": [
          "Adoção"
        ],
        "summary": "Cria um pedido de adoção",
        "description": "Cria um pedido de adoção para um animal. Requer o ID do animal no body. O **tutor deve ter preenchido o questionário** previamente. **Requer autenticação.**",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PedidoAdocaoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pedido de adoção registrado com sucesso (em análise).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PedidoAdocao"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Questionário não preenchido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "O tutor ainda não respondeu o questionário obrigatório."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Token ausente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token ausente."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Token inválido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token inválido"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: Tutor/Animal não encontrado ou Animal já adotado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "NaoEncontrado": {
                    "value": {
                      "erro": "Tutor ou animal não encontrado"
                    }
                  },
                  "AnimalAdotado": {
                    "value": {
                      "erro": "Este animal já foi adotado."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict: Pedido de adoção ativo já existe para o animal.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Este tutor já tem um pedido de adoção ativo para este animal"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      }
    },
    "/doacao": {
      "post": {
        "tags": [
          "Doações"
        ],
        "summary": "Registra uma doação e gera Pix",
        "description": "Registra uma doação e simula a geração de um QR Code/Link Pix (chave fictícia).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoacaoPost"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Doação registrada e dados Pix gerados com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoacaoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Dados da doação inválidos (valor, nome ou mensagem ausentes/inválidos).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Valor da doação, nome e mensagem são obrigatórios. O valor deve ser um número positivo."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      }
    },
    "/admin/animais": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Lista todos os animais (Apenas Administrador)",
        "description": "Retorna a lista completa de animais, incluindo os já adotados, com opções de filtros.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "especie",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtrar por espécie do animal (ex: 'cachorro', 'gato')"
          },
          {
            "name": "porte",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filtrar por porte (ex: 'pequeno', 'medio', 'grande')"
          },
          {
            "name": "castrado",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filtrar por castrado (`true` ou `false`)"
          },
          {
            "name": "vacinado",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filtrar por vacinado (`true` ou `false`)"
          },
          {
            "name": "adotado",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Filtrar por adotado (`true` ou `false`)"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista completa de animais.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnimalListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Token ausente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token ausente."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Usuário não é Administrador.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Acesso negado. Você não tem permissão de administrador para realizar esta ação."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      }
    },
    "/admin/animais/{id}": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Busca detalhes de um animal (Apenas Administrador)",
        "description": "Busca os detalhes completos de um animal, incluindo informações sobre os pedidos de adoção.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID do Animal"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do animal e lista de pedidos de adoção em análise.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAnimalDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Token ausente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token ausente."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Usuário não é Administrador.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Acesso negado. Você não tem permissão de administrador para realizar esta ação."
                }
              }
            }
          },
          "404": {
            "description": "Not Found: Animal não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Animal não encontrado"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Administrador"
        ],
        "summary": "Atualiza o status de um animal (Apenas Administrador)",
        "description": "Permite ao administrador atualizar campos como `castrado`, `vacinado`, `adotado`.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID do Animal"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminAnimalPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Animal atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminAnimalPatchRes"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: <br>1. Dados de atualização ausentes/vazios. <br>2. Campo não permitido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "DadosAusentes": {
                    "value": {
                      "error": "Nenhum campo foi fornecido para atualização"
                    }
                  },
                  "CamposProibidos": {
                    "value": {
                      "error": "O campo '${campo}' não pode ser alterado através desta rota de status."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Token ausente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token ausente."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Usuário não é Administrador.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Acesso negado. Você não tem permissão de administrador para realizar esta ação."
                }
              }
            }
          },
          "404": {
            "description": "Not Found: Animal não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Animal não encontrado"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Administrador"
        ],
        "summary": "Remove um animal da base de dados (Apenas Administrador)",
        "description": "Deleta um registro de animal.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "ID do Animal"
          }
        ],
        "responses": {
          "204": {
            "description": "Animal removido com sucesso (No Content)."
          },
          "401": {
            "description": "Unauthorized: Token ausente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Token ausente."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: Usuário não é Administrador.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Acesso negado. Você não tem permissão de administrador para realizar esta ação."
                }
              }
            }
          },
          "404": {
            "description": "Not Found: Animal não encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Animal não encontrado"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "erro": "Erro interno do servidor."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "erro": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "tutor@exemplo.com"
          },
          "senha": {
            "type": "string",
            "format": "password",
            "example": "senhasegura123"
          }
        },
        "required": [
          "email",
          "senha"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token JWT para autenticação Bearer"
          },
          "tutor": {
            "$ref": "#/components/schemas/TutorResponseData"
          }
        }
      },
      "TutorCreateRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TutorBase"
          },
          {
            "type": "object"
          }
        ],
        "properties": {
          "senha": {
            "type": "string",
            "format": "password",
            "example": "senha_nova_123"
          }
        },
        "required": [
          "nome_completo",
          "email",
          "senha",
          "cidade",
          "estado",
          "idade",
          "telefone"
        ]
      },
      "TutorResponseData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TutorBase"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "TutorBase": {
        "type": "object",
        "properties": {
          "nome_completo": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "cidade": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          },
          "idade": {
            "type": "integer"
          },
          "telefone": {
            "type": "string"
          },
          "celular": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "endereco": {
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "type": "string",
            "nullable": true
          },
          "cep": {
            "type": "integer",
            "nullable": true
          },
          "instagram": {
            "type": "string",
            "nullable": true
          },
          "facebook": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TutorPatch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "nome_completo": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "cidade": {
            "type": "string"
          },
          "estado": {
            "type": "string"
          }
        }
      },
      "TutorResponse": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/TutorResponseData"
          },
          {
            "type": "object",
            "properties": {
              "questionario": {
                "$ref": "#/components/schemas/Questionario"
              }
            }
          }
        ]
      },
      "AnimalBase": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "especie": {
            "type": "string"
          },
          "porte": {
            "type": "string"
          },
          "castrado": {
            "type": "boolean"
          },
          "vacinado": {
            "type": "boolean"
          },
          "adotado": {
            "type": "boolean"
          },
          "descricao": {
            "type": "string"
          },
          "foto": {
            "type": "string",
            "format": "url",
            "nullable": true
          }
        }
      },
      "AnimalPost": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AnimalBase"
          }
        ],
        "required": [
          "nome",
          "especie",
          "porte",
          "descricao"
        ]
      },
      "AnimalRes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnimalBase"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "AdminAnimalPatch": {
        "type": "object",
        "properties": {
          "castrado": {
            "type": "boolean",
            "example": true
          },
          "vacinado": {
            "type": "boolean",
            "example": true
          },
          "adotado": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "AdminAnimalPatchRes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AdminAnimalPatch"
          },
          {
            "type": "object",
            "properties": {
              "nome": {
                "type": "string"
              },
              "descricao": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "id": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      },
      "AdminAnimalDetailResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AnimalBase"
          },
          {
            "type": "object",
            "properties": {
              "pedidos": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "status": {
                      "type": "string"
                    },
                    "posicao_fila": {
                      "type": "integer",
                      "nullable": true
                    },
                    "tutorId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "AnimalListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnimalRes"
            },
            "description": "Lista de objetos Animal."
          },
          "total": {
            "type": "integer",
            "description": "Número total de animais retornados."
          }
        }
      },
      "PedidoAdocaoRequest": {
        "type": "object",
        "properties": {
          "animal_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID do animal que o tutor deseja adotar."
          }
        },
        "required": [
          "animal_id"
        ]
      },
      "PedidoAdocao": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tutorId": {
            "type": "string",
            "format": "uuid"
          },
          "animalId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "em_analise",
              "aprovado",
              "rejeitado"
            ],
            "default": "em_analise"
          },
          "posicao_fila": {
            "type": "integer",
            "nullable": true,
            "description": "Posição do pedido na fila de análise para o animal."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DoacaoPost": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "example": "Joana Silva",
            "description": "Nome do doador."
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "Email do doador (opcional)."
          },
          "valor": {
            "type": "number",
            "format": "float",
            "example": 100,
            "description": "Valor da doação (deve ser positivo)."
          },
          "mensagem": {
            "type": "string",
            "example": "Obrigado pelo trabalho!",
            "description": "Mensagem do doador."
          }
        },
        "required": [
          "nome",
          "valor",
          "mensagem"
        ]
      },
      "DoacaoResponse": {
        "type": "object",
        "properties": {
          "doacao_id": {
            "type": "string",
            "format": "uuid"
          },
          "nome": {
            "type": "string"
          },
          "valor": {
            "type": "number",
            "format": "float"
          },
          "mensagem": {
            "type": "string"
          },
          "linkPix": {
            "type": "string",
            "description": "String de código PIX para cópia e cola."
          },
          "qrCodeBase64": {
            "type": "string",
            "description": "QR Code da transação Pix em formato Base64."
          }
        }
      },
      "Questionario": {
        "type": "object",
        "properties": {
          "empregado": {
            "type": "boolean"
          },
          "quantos_animais_possui": {
            "type": "integer"
          },
          "motivos_para_adotar": {
            "type": "string"
          },
          "quem_vai_sustentar_o_animal": {
            "type": "string"
          },
          "numero_adultos_na_casa": {
            "type": "integer"
          },
          "numero_criancas_na_casa": {
            "type": "boolean"
          },
          "idades_criancas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array de idades das crianças na casa (stringified no Model, mas array na requisição/resposta)."
          },
          "residencia_tipo": {
            "type": "string"
          },
          "proprietario_permite_animais": {
            "type": "boolean"
          },
          "todos_de_acordo_com_adocao": {
            "type": "boolean"
          },
          "responsavel_pelo_animal": {
            "type": "string"
          },
          "responsavel_concorda_com_adocao": {
            "type": "boolean"
          },
          "ha_alergico_ou_pessoas_que_nao_gostam": {
            "type": "boolean"
          },
          "gasto_mensal_estimado": {
            "type": "number",
            "format": "float"
          },
          "valor_disponivel_no_orcamento": {
            "type": "boolean"
          },
          "tipo_alimentacao": {
            "type": "string"
          },
          "local_que_o_animal_vai_ficar": {
            "type": "string"
          },
          "forma_de_permanencia": {
            "type": "string"
          },
          "forma_de_confinamento": {
            "type": "string"
          },
          "tera_brinquedos": {
            "type": "boolean"
          },
          "tera_abrigo": {
            "type": "boolean"
          },
          "tera_passeios_acompanhado": {
            "type": "boolean"
          },
          "tera_passeios_sozinho": {
            "type": "boolean"
          },
          "companhia_outro_animal": {
            "type": "boolean"
          },
          "companhia_humana_24h": {
            "type": "boolean"
          },
          "companhia_humana_parcial": {
            "type": "boolean"
          },
          "sem_companhia_humana": {
            "type": "boolean"
          },
          "sem_companhia_animal": {
            "type": "boolean"
          },
          "o_que_faz_em_viagem": {
            "type": "string"
          },
          "o_que_faz_se_fugir": {
            "type": "string"
          },
          "o_que_faz_se_nao_puder_criar": {
            "type": "string"
          },
          "animais_que_ja_criou": {
            "type": "string"
          },
          "destino_animais_anteriores": {
            "type": "string"
          },
          "costuma_esterilizar": {
            "type": "boolean"
          },
          "costuma_vacinar": {
            "type": "boolean"
          },
          "costuma_vermifugar": {
            "type": "boolean"
          },
          "veterinario_usual": {
            "type": "string"
          },
          "forma_de_educar": {
            "type": "string"
          },
          "envia_fotos_e_videos_do_local": {
            "type": "boolean"
          },
          "aceita_visitas_e_fotos_do_animal": {
            "type": "boolean"
          },
          "topa_entrar_grupo_adotantes": {
            "type": "boolean"
          },
          "concorda_com_taxa_adocao": {
            "type": "boolean"
          },
          "data_disponivel_para_buscar_animal": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "quantos_animais_possui",
          "motivos_para_adotar",
          "quem_vai_sustentar_o_animal",
          "numero_adultos_na_casa",
          "numero_criancas_na_casa",
          "residencia_tipo",
          "proprietario_permite_animais",
          "todos_de_acordo_com_adocao",
          "responsavel_pelo_animal",
          "responsavel_concorda_com_adocao",
          "ha_alergico_ou_pessoas_que_nao_gostam",
          "gasto_mensal_estimado",
          "valor_disponivel_no_orcamento",
          "tipo_alimentacao",
          "local_que_o_animal_vai_ficar",
          "forma_de_permanencia",
          "forma_de_confinamento",
          "tera_brinquedos",
          "tera_abrigo",
          "tera_passeios_acompanhado",
          "tera_passeios_sozinho",
          "companhia_outro_animal",
          "companhia_humana_24h",
          "companhia_humana_parcial",
          "sem_companhia_humana",
          "sem_companhia_animal",
          "o_que_faz_em_viagem",
          "o_que_faz_se_fugir",
          "o_que_faz_se_nao_puder_criar",
          "animais_que_ja_criou",
          "destino_animais_anteriores",
          "costuma_esterilizar",
          "costuma_vacinar",
          "costuma_vermifugar",
          "veterinario_usual",
          "forma_de_educar",
          "envia_fotos_e_videos_do_local",
          "aceita_visitas_e_fotos_do_animal",
          "topa_entrar_grupo_adotantes",
          "concorda_com_taxa_adocao",
          "data_disponivel_para_buscar_animal"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "Token JWT obtido no login. Deve ser incluído no cabeçalho Authorization como 'Bearer {token}'.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}